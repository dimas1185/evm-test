worker_processes  5;
#daemon off;
error_log  /var/log/nginx/error.log;
pid        /var/log/nginx/nginx.pid;
worker_rlimit_nofile 8192;
user root root;
events {
  worker_connections  4096;
}

http {
  include  /usr/local/openresty/nginx/conf/mime.types;
  index    index.html index.htm index.php;

  upstream write {
    server host.docker.internal:18888;
  }
  
  upstream read {
    server host.docker.internal:8881;
    keepalive 1000;
  }

  default_type application/octet-stream;
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log   /var/log/nginx/access.log  main;
  log_format postdata '$remote_addr [$time_local] $upstream_status $remote_addr $request_body';
  sendfile     on;
  tcp_nopush   on;

  map $upstream_status $log_postdata {
     default 0;
     ~^5 1;
  }

  server {
    listen       80;
    server_name  localhost;

    location / {
      if ($request_method = 'OPTIONS') {
          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Credentials' 'true';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' '*';
          add_header 'Access-Control-Max-Age' 1728000;
          add_header 'Content-Type' 'text/plain charset=UTF-8';
          add_header 'Content-Length' 0;
          return 204;
      }
      if ($request_method = 'POST') {
          add_header 'Access-Control-Allow-Origin' '*' always;
          add_header 'Access-Control-Allow-Credentials' 'true' always;
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
          add_header 'Access-Control-Allow-Headers' '*';
      }
      if ($request_method = 'GET') {
          add_header 'Access-Control-Allow-Origin' '*';
          add_header 'Access-Control-Allow-Credentials' 'true';
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
          add_header 'Access-Control-Allow-Headers' '*';
          return 204;
      }
      
      resolver 127.0.0.11;
      set $proxy "read";
      set $jsonrpc_write_calls 'eth_sendRawTransaction,eth_gasPrice';
      set $jsonrpc_read_calls 'net_version,eth_blockNumber,eth_chainId,eth_protocolVersion,eth_getBlockByHash,eth_getBlockByNumber,eth_getBlockTransactionCountByHash,eth_getBlockTransactionCountByNumber,eth_getUncleByBlockHashAndIndex,eth_getUncleByBlockNumberAndIndex,eth_getUncleCountByBlockHash,eth_getUncleCountByBlockNumber,eth_getTransactionByHash,eth_getRawTransactionByHash,eth_getTransactionByBlockHashAndIndex,eth_getRawTransactionByBlockHashAndIndex,eth_getTransactionByBlockNumberAndIndex,eth_getRawTransactionByBlockNumberAndIndex,eth_getTransactionReceipt,eth_getBlockReceipts,eth_estimateGas,eth_getBalance,eth_getCode,eth_getTransactionCount,eth_getStorageAt,eth_call,eth_callBundle,eth_createAccessList';
      set $jsonrpc_test_calls 'eth_getLogs,debug_traceBlockByHash,debug_traceBlockByNumber,debug_traceTransaction,debug_traceCall,debug_traceCallMany,trace_call,trace_callMany,trace_rawTransaction,trace_replayBlockTransactions,trace_replayTransaction,trace_block,trace_filter,trace_get,trace_transaction';
      access_by_lua_file 'eth-jsonrpc-access.lua';
      proxy_pass http://$proxy;
      proxy_set_header content-type "application/json";
      proxy_set_header accept "application/json";
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_http_version 1.1;
      access_log /var/log/nginx/error/${proxy}-post-data.log postdata if=$log_postdata;
    }
  }

}
